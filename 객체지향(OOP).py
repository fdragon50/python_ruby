객체 지향 프로그래밍
object oriented programming (OOP)


object
class + instance
포유류 + 사람/고양이/말


class는 함수뿐 아니라 연관 변수들을 담는 그릇 (모듈은 함수들)

class는 박스
class에는 "연관되어있는" 변수와 함수가 담겨있다
class를 복제해서.. 무언가를 만든다
복제해서 만든 것들을 인스턴스... 라고 부른다

각각의 인스턴스는 같은 변수와 함수를 갖는다.

instance 란?
class가 복제된 형태이며..
instance 마다 변수에 담겨있는 값이 다를 수 있다.(다른값이 저장될 수 있다)
각각의 instance는 각기 다른 변수로 함수가 처리되어있다.

변수 < 데이터  #일반적인 표현으로는
함수 < 로직
클래스는 연관된 데이터와 로직들을 그룹핑 해 놓은것

---------------------------------------------------------------

왜 객체를 사용해야 할까?

집에 책이 한권 있다.
책은 어디에 있어도 상관이 없다
책이 늘어나면.. 100권..정도..  아무데나 뒹굴면 찾기 쉽지 않음
책장 .. 분류를 시작함
프로그램도.. 시간이 지나면서 복잡도가 올라가면서
여러가지 기법들이 생겨난 것임
함수 / 모듈 / 객체지향 등..
객체지향은 정리정돈의 정점
어떻게 배우는 것이 좋을까?
직접 객체를 만든다라는느낌 보다는
다른사람들이 만든 객체를 '사용한다'는 느낌은 가질 필요가 반드시... 있음
객체를 만들어 제공 중
객체를 사용하기 위해는 알아야 한다.
우리도 객체를 만들어 프로그래밍을 할필요는 없다
사용 하는것만으로 프로그래밍하기에 차고 넘침

잘 정리정돈 할 수 있는 기능들을 배울 예정
