# 객체 미사용 코드
def add(v1, v2)
  return v1+v2
end
def subtract(v1, v2)
  return v1-v2
end

num1 = 10
num2 = 10
p add(num1,num2)
p subtract(num1,num2)

num3 = 30
num4 = 20
p add(num3,num4)
p subtract(num3, num4)

# 프로그램 엄청. 커진다는 전제하에....
# 누군가가 add 메소드를 새로 정의.....
# add 함수가 중복 정의 되면서....
# 프로그램이 오동작하게 됨....
# 하지만... 객체지향 프로그램 에선는...
# c1 인스턴스 안에... 메소드와 인스턴스 변수가  (안전하게)보관되어있기 때문에
# 메소드와 변수가 다른 코드들에 영향을 받아 변형.. 훼손될 가능성이
# 더욱 낮아질 수 있음..



# 객체지향 프로그램밍을 하는 이유: 
# 프로그램이 커지다보면... 복잡도가 상승되고...
# 이런 복잡도를 낮출 수 있는 기법임
